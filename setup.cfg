# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
name = pps
description = Python Productivity stack for simple environment set up
author =  The Nomadic Coder
author_email = me@prassanna.io
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://prassanna.io
# Add here related links, for example:
project_urls =
    Documentation = https://prassanna.io
#    Source = https://github.com/pyscaffold/pyscaffold/
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
#    Tracker = https://github.com/pyscaffold/pyscaffold/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False


# Require a min/specific Python version (comma-separated conditions)
# python_requires = >=3.8

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"    
    protobuf==3.19.0  #prevents bugs 


[options.packages.find]
where = src
exclude =
    tests

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install python-productivity-stack[PDF]` like:
# PDF = ReportLab; RXP

# Add here test requirements (semicolon/line-separated)
project =
    black~=22.6.0
    pyscaffold~=4.2.2
    pre-commit~=2.2.0

ml =
    scikit-learn~=1.1.1
    torch~=1.12.0 
    numpy~=1.23.1
    pytorch-lightning~=1.6.5
    pandas~=1.4.3
    notebook~=6.4.12

vision = 
    scikit-image~=0.19.3
    kornia~=0.6.6

web = 
    fastapi~=0.79.0
    streamlit~=1.11.0
    aiohttp~=3.8.1
    dash~=0.26.0

sdev = 
    python-box~=6.0.2
    aiomultiprocess~=0.9.0
    dask~=2022.7.1
    rootpath~=0.1.1
    tqdm~=4.64.0
    rich~=12.5.1

mlops =
    boto3~=1.24.36
    sagemaker~=2.100.0
    mlflow~=1.27.0
    python-terraform~=0.10.1
    prefect~=1.2.4
    s3fs~=2022.5.0

docs =
    sphinx~=5.0.2
    graphviz~=0.20.1
    mkdocs~=1.3.1

ops =
    radon~=5.1.0
    bandit~=1.7.4

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = python_productivity_stack.module:function
# For example:
# console_scripts =
#     fibonacci = python_productivity_stack.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension


[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.2.2
package = python_productivity_stack
extensions =
    markdown
